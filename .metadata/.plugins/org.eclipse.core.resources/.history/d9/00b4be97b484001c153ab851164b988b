package entities;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

public class CidadesInternacionais extends Destinos {

	public CidadesInternacionais(String nome, String estacao, String moeda, String pontosTuristicos, int fuso,
			int periodo, int temperaturaMin, int temperaturaMax, float cambio, float custos, float alimentacao,
			float hospedagem, boolean visto) {

		super(nome, estacao, moeda, pontosTuristicos, fuso, periodo, temperaturaMin, temperaturaMax, cambio, custos,
				alimentacao, hospedagem, visto);
		// TODO Auto-generated constructor stub
	}

	public void cambio(float cambio) {
		// TODO Auto-generated method stub

	}

	public void imprimirFuso(int fuso) {
		// TODO Auto-generated method stub
		if (fuso < 0) {
			System.out.println("Diferença fuso horária -" + fuso + ":00");
		} else {
			System.out.println("Diferença fuso horária " + fuso + ":00");
		}
		GregorianCalendar gc = new GregorianCalendar();
		gc.setTime(new Date());

		SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
		System.out.println("Horário local: " + sdf.format(gc.getTime()));

		gc.add(Calendar.HOUR, fuso);
		System.out.println("Horário no destino: " + sdf.format(gc.getTime()));
	}

	public void imprimirClima(int clima) {
		// TODO Auto-generated method stub
		
		if (periodo == 1 && nome == "Londres") {
			setTemperaturaMin(2);
			setTemperaturaMax(8);
		
		} else if (periodo == 2 && nome == "Londres") {
			setTemperaturaMin(3);
			setTemperaturaMax(17);
		
		} else if (periodo == 3 && nome == "Londres") {
			setTemperaturaMin(11);
			setTemperaturaMax(22);
		
		} else if (periodo == 4 && nome == "Londres") {
			setTemperaturaMin(4);
			setTemperaturaMax(19);
		
		} else if (periodo == 1 && nome == "Paris") {
			setTemperaturaMin(3);
			setTemperaturaMax(9);
		
		} else if (periodo == 2 && nome == "Paris") {
			setTemperaturaMin(6);
			setTemperaturaMax(22);
			
		} else if (periodo == 3 && nome == "Paris") {
			setTemperaturaMin(14);
			setTemperaturaMax(26);
			
		} else if (periodo == 4 && nome == "Paris") {
			setTemperaturaMin(5);
			setTemperaturaMax(20);
			
		} else if (periodo == 1 && nome == "Los Angeles") {
			setTemperaturaMin(3);
			setTemperaturaMax(9);
			
		} else if (periodo == 2 && nome == "Los Angeles") {
			setTemperaturaMin(5);
			setTemperaturaMax(20);
			
		} else if (periodo == 3 && nome == "Los Angeles") {
			setTemperaturaMin(14);
			setTemperaturaMax(26);
				
		} else if (periodo == 4 && nome == "Los Angeles") {
			setTemperaturaMin(6);
			setTemperaturaMax(22);
				
		} else if (periodo == 1 && nome == "Buenos Aires") {
			setTemperaturaMin(19);
			setTemperaturaMax(29);
				
		} else if (periodo == 2 && nome == "Buenos Aires") {
			setTemperaturaMin(12);
			setTemperaturaMax(26);
				
		} else if (periodo == 3 && nome == "Buenos Aires") {
			setTemperaturaMin(8);
			setTemperaturaMax(17);
				
		} else if (periodo == 4 && nome == "Buenos Aires") {
			setTemperaturaMin(11);
			setTemperaturaMax(25);
					
		} else if (periodo == 1 && nome == "Dubai") {
			setTemperaturaMin(18);
			setTemperaturaMax(38);
					
		} else if (periodo == 2 && nome == "Dubai") {
			setTemperaturaMin(18);
			setTemperaturaMax(38);
					
		}  else if (periodo == 3 && nome == "Dubai") {
			setTemperaturaMin(28);
			setTemperaturaMax(41);
					
		}  else if (periodo == 4 && nome == "Dubai") {
			setTemperaturaMin(4);
			setTemperaturaMax(19);
						
		} else {
			System.out.println("Opção inválida!");
			
		}
		
		if(getTemperaturaMin() != 0) {
			
			System.out.println("A média de temperatura em " + getNome() + " nessa época do ano é de "
			+ getTemperaturaMin() + "ºC à " + getTemperaturaMax() + "ºC.");
			
		}
		
		
}

	@Override
	protected void geNome(String nome) {
		// TODO Auto-generated method stub

	}

	@Override
	protected void imprimirCustos(float custos) {
		// TODO Auto-generated method stub

	}

	@Override
	protected void pontosTuristicos(String pontosTuristicos) {
		// TODO Auto-generated method stub

	}

}